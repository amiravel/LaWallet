<?php

namespace App\Services;

use App\Repositories\Contracts\BaseRepositoryInterface;
use App\Repositories\Contracts\TransactionRepositoryInterface;
use App\Repositories\Contracts\WalletRepositoryInterface;
use App\Services\Contracts\CacheServiceInterface;
use App\Services\Contracts\TransactionServiceInterface;
use App\Services\Contracts\WalletServiceInterface;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Hash;

class TransactionService extends BaseResourceService implements TransactionServiceInterface
{

    public function __construct(TransactionRepositoryInterface $repository, CacheServiceInterface $cacheService)
    {
        parent::__construct($repository, $cacheService);
    }

    public function create(array $attributes): Model
    {
        $attributes['hash'] = $this->generateTransactionHash(
            $attributes['from_id'],
            $attributes['to_id'],
            $attributes['amount']
        );

        return parent::create($attributes); // TODO: Change the autogenerated stub
    }

    public function generateTransactionHash(int $fromId, int $toId, int $amount): string
    {
        $timestamp = now()->timestamp;

        return Hash::make("{$fromId}-{$toId}-{$amount}-{$timestamp}");
    }

}
